// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/funcy/functions_go/models"
)

// PatchAppsAppReader is a Reader for the PatchAppsApp structure.
type PatchAppsAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAppsAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchAppsAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchAppsAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchAppsAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchAppsAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchAppsAppOK creates a PatchAppsAppOK with default headers values
func NewPatchAppsAppOK() *PatchAppsAppOK {
	return &PatchAppsAppOK{}
}

/*PatchAppsAppOK handles this case with default header values.

App details and stats.
*/
type PatchAppsAppOK struct {
	Payload *models.AppWrapper
}

func (o *PatchAppsAppOK) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app}][%d] patchAppsAppOK  %+v", 200, o.Payload)
}

func (o *PatchAppsAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppsAppBadRequest creates a PatchAppsAppBadRequest with default headers values
func NewPatchAppsAppBadRequest() *PatchAppsAppBadRequest {
	return &PatchAppsAppBadRequest{}
}

/*PatchAppsAppBadRequest handles this case with default header values.

Parameters are missing or invalid.
*/
type PatchAppsAppBadRequest struct {
	Payload *models.Error
}

func (o *PatchAppsAppBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app}][%d] patchAppsAppBadRequest  %+v", 400, o.Payload)
}

func (o *PatchAppsAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppsAppNotFound creates a PatchAppsAppNotFound with default headers values
func NewPatchAppsAppNotFound() *PatchAppsAppNotFound {
	return &PatchAppsAppNotFound{}
}

/*PatchAppsAppNotFound handles this case with default header values.

App does not exist.
*/
type PatchAppsAppNotFound struct {
	Payload *models.Error
}

func (o *PatchAppsAppNotFound) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app}][%d] patchAppsAppNotFound  %+v", 404, o.Payload)
}

func (o *PatchAppsAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppsAppDefault creates a PatchAppsAppDefault with default headers values
func NewPatchAppsAppDefault(code int) *PatchAppsAppDefault {
	return &PatchAppsAppDefault{
		_statusCode: code,
	}
}

/*PatchAppsAppDefault handles this case with default header values.

Unexpected error
*/
type PatchAppsAppDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the patch apps app default response
func (o *PatchAppsAppDefault) Code() int {
	return o._statusCode
}

func (o *PatchAppsAppDefault) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app}][%d] PatchAppsApp default  %+v", o._statusCode, o.Payload)
}

func (o *PatchAppsAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
