package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/funcy/functions_go/models"
)

// PutAppsAppReader is a Reader for the PutAppsApp structure.
type PutAppsAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAppsAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutAppsAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutAppsAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutAppsAppInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutAppsAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPutAppsAppOK creates a PutAppsAppOK with default headers values
func NewPutAppsAppOK() *PutAppsAppOK {
	return &PutAppsAppOK{}
}

/*PutAppsAppOK handles this case with default header values.

App details and stats.
*/
type PutAppsAppOK struct {
	Payload *models.AppWrapper
}

func (o *PutAppsAppOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] putAppsAppOK  %+v", 200, o.Payload)
}

func (o *PutAppsAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAppsAppBadRequest creates a PutAppsAppBadRequest with default headers values
func NewPutAppsAppBadRequest() *PutAppsAppBadRequest {
	return &PutAppsAppBadRequest{}
}

/*PutAppsAppBadRequest handles this case with default header values.

Parameters are missing or invalid.
*/
type PutAppsAppBadRequest struct {
	Payload *models.Error
}

func (o *PutAppsAppBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] putAppsAppBadRequest  %+v", 400, o.Payload)
}

func (o *PutAppsAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAppsAppInternalServerError creates a PutAppsAppInternalServerError with default headers values
func NewPutAppsAppInternalServerError() *PutAppsAppInternalServerError {
	return &PutAppsAppInternalServerError{}
}

/*PutAppsAppInternalServerError handles this case with default header values.

Could not accept app due to internal error.
*/
type PutAppsAppInternalServerError struct {
	Payload *models.Error
}

func (o *PutAppsAppInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] putAppsAppInternalServerError  %+v", 500, o.Payload)
}

func (o *PutAppsAppInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAppsAppDefault creates a PutAppsAppDefault with default headers values
func NewPutAppsAppDefault(code int) *PutAppsAppDefault {
	return &PutAppsAppDefault{
		_statusCode: code,
	}
}

/*PutAppsAppDefault handles this case with default header values.

Unexpected error
*/
type PutAppsAppDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the put apps app default response
func (o *PutAppsAppDefault) Code() int {
	return o._statusCode
}

func (o *PutAppsAppDefault) Error() string {
	return fmt.Sprintf("[PUT /apps/{app}][%d] PutAppsApp default  %+v", o._statusCode, o.Payload)
}

func (o *PutAppsAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
