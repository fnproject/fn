// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/funcy/functions_go/models"
)

// DeleteAppsAppCallsCallLogReader is a Reader for the DeleteAppsAppCallsCallLog structure.
type DeleteAppsAppCallsCallLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAppsAppCallsCallLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewDeleteAppsAppCallsCallLogAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteAppsAppCallsCallLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteAppsAppCallsCallLogDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteAppsAppCallsCallLogAccepted creates a DeleteAppsAppCallsCallLogAccepted with default headers values
func NewDeleteAppsAppCallsCallLogAccepted() *DeleteAppsAppCallsCallLogAccepted {
	return &DeleteAppsAppCallsCallLogAccepted{}
}

/*DeleteAppsAppCallsCallLogAccepted handles this case with default header values.

Log delete request accepted
*/
type DeleteAppsAppCallsCallLogAccepted struct {
}

func (o *DeleteAppsAppCallsCallLogAccepted) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app}/calls/{call}/log][%d] deleteAppsAppCallsCallLogAccepted ", 202)
}

func (o *DeleteAppsAppCallsCallLogAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppsAppCallsCallLogNotFound creates a DeleteAppsAppCallsCallLogNotFound with default headers values
func NewDeleteAppsAppCallsCallLogNotFound() *DeleteAppsAppCallsCallLogNotFound {
	return &DeleteAppsAppCallsCallLogNotFound{}
}

/*DeleteAppsAppCallsCallLogNotFound handles this case with default header values.

Does not exist.
*/
type DeleteAppsAppCallsCallLogNotFound struct {
	Payload *models.Error
}

func (o *DeleteAppsAppCallsCallLogNotFound) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app}/calls/{call}/log][%d] deleteAppsAppCallsCallLogNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAppsAppCallsCallLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppsAppCallsCallLogDefault creates a DeleteAppsAppCallsCallLogDefault with default headers values
func NewDeleteAppsAppCallsCallLogDefault(code int) *DeleteAppsAppCallsCallLogDefault {
	return &DeleteAppsAppCallsCallLogDefault{
		_statusCode: code,
	}
}

/*DeleteAppsAppCallsCallLogDefault handles this case with default header values.

Unexpected error
*/
type DeleteAppsAppCallsCallLogDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete apps app calls call log default response
func (o *DeleteAppsAppCallsCallLogDefault) Code() int {
	return o._statusCode
}

func (o *DeleteAppsAppCallsCallLogDefault) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app}/calls/{call}/log][%d] DeleteAppsAppCallsCallLog default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteAppsAppCallsCallLogDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
