package call

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/funcy/functions_go/models"
)

// GetCallsCallReader is a Reader for the GetCallsCall structure.
type GetCallsCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCallsCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCallsCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetCallsCallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCallsCallOK creates a GetCallsCallOK with default headers values
func NewGetCallsCallOK() *GetCallsCallOK {
	return &GetCallsCallOK{}
}

/*GetCallsCallOK handles this case with default header values.

Call found
*/
type GetCallsCallOK struct {
	Payload *models.CallWrapper
}

func (o *GetCallsCallOK) Error() string {
	return fmt.Sprintf("[GET /calls/{call}][%d] getCallsCallOK  %+v", 200, o.Payload)
}

func (o *GetCallsCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CallWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCallsCallNotFound creates a GetCallsCallNotFound with default headers values
func NewGetCallsCallNotFound() *GetCallsCallNotFound {
	return &GetCallsCallNotFound{}
}

/*GetCallsCallNotFound handles this case with default header values.

Call not found.
*/
type GetCallsCallNotFound struct {
	Payload *models.Error
}

func (o *GetCallsCallNotFound) Error() string {
	return fmt.Sprintf("[GET /calls/{call}][%d] getCallsCallNotFound  %+v", 404, o.Payload)
}

func (o *GetCallsCallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
