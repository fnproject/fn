version: '3'
services:
  logstore:
    hostname: logstore
    image: minio/minio
    ports:
      - "9091:9000"
    environment:
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
    volumes:
      - ./data/logstore:/data
    command: server /data
  mysql-initiator:
    image: "mattalord/innodb-cluster"
    hostname: mysql-initiator
    restart: always
    environment:
      - "MYSQL_DATABASE=funcs"
      - "MYSQL_ROOT_PASSWORD=root"
      - "GROUP_NAME=C55153C1-1574-4972-BF06-7332D6AD46A7"
      - "BOOTSTRAP=1"
    volumes:
      - ./data/mysql-initiator:/var/lib/mysql
  mysql-2:
    image: "mattalord/innodb-cluster"
    hostname: mysql-2
    restart: always
    environment:
      - "MYSQL_DATABASE=funcs"
      - "MYSQL_ROOT_PASSWORD=root"
      - "GROUP_NAME=C55153C1-1574-4972-BF06-7332D6AD46A7"
      - "GROUP_SEEDS=mysql-initiator:6606, mysql-3:6606"
    depends_on:
      - mysql-initiator
    volumes:
      - ./data/mysql-member-2:/var/lib/mysql
  mysql-3:
    image: "mattalord/innodb-cluster"
    hostname: mysql-3
    restart: always
    environment:
      - "MYSQL_DATABASE=funcs"
      - "MYSQL_ROOT_PASSWORD=root"
      - "GROUP_NAME=C55153C1-1574-4972-BF06-7332D6AD46A7"
      - "GROUP_SEEDS=mysql-initiator:6606, mysql-2:6606"
    volumes:
      - ./data/mysql:/var/lib/mysql
    depends_on:
      - mysql-initiator
    volumes:
      - ./data/mysql-member-3:/var/lib/mysql
  router:
    image: "mattalord/innodb-cluster"
    hostname: router
    restart: always
    depends_on:
      - mysql-initiator
      - mysql-2
      - mysql-3
    environment:
      - "NODE_TYPE=router"
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_HOST=mysql-initiator"
    volumes:
      - ./data/mysql-router:/var/lib/mysqlrouter
  mq:
    image: "redis"
    hostname: mq
    restart: always
    ports:
      - "6379:6379"
  fnserver-1:
    hostname: fnserver-1
    ports:
      - "8083:8080"
    restart: always
    depends_on:
      - mq
      - router
      - logstore
    image: fnproject/fnserver
    links:
      - "router"
      - "mq"
      - "logstore"
    environment:
      FN_LOG_LEVEL: "DEBUG"
      FN_DB_URL: "mysql://root:root@tcp(router:6446)/funcs"
      FN_MQ_URL: "redis://mq:6379/"
      FN_LOGSTORE_URL: "s3://admin:password@logstore:9000/us-east-1/fnlogs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  fnserver-2:
    hostname: fnserver-2
    ports:
      - "8082:8080"
    restart: always
    depends_on:
      - mq
      - router
    image: fnproject/fnserver
    links:
      - "router"
      - "mq"
      - "logstore"
    environment:
      FN_LOG_LEVEL: "DEBUG"
      FN_DB_URL: "mysql://root:root@tcp(router:6446)/funcs"
      FN_MQ_URL: "redis://mq:6379/"
      FN_LOGSTORE_URL: "s3://admin:password@logstore:9000/us-east-1/fnlogs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  fnserver-3:
    hostname: fnserver-3
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - mq
      - router
    image: fnproject/fnserver
    links:
      - "router"
      - "mq"
      - "logstore"
    environment:
      FN_LOG_LEVEL: "DEBUG"
      FN_DB_URL: "mysql://root:root@tcp(router:6446)/funcs"
      FN_MQ_URL: "redis://mq:6379/"
      FN_LOGSTORE_URL: "s3://admin:password@logstore:9000/us-east-1/fnlogs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  grafana:
    hostname: grafana
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus
    depends_on:
      - prometheus
  prometheus:
    hostname: grafana
    image: prom/prometheus
    restart: always
    depends_on:
      - fnserver-1
      - fnserver-2
      - fnserver-3
    ports:
      - "9090:9090"
    links:
      - fnserver-1
      - fnserver-2
      - fnserver-3
    volumes:
      - ./examples/grafana/prometheus-fn-cluster.yml:/etc/prometheus/prometheus.yml
  fnlb:
    hostname: fnlb
    ports:
      - "8080:8081"
    depends_on:
      - fnserver-1
      - fnserver-2
      - fnserver-3
    image: fnproject/fnlb
    restart: always
    links:
      - "fnserver-1"
      - "fnserver-2"
      - "fnserver-3"
    command: "--nodes fnserver-1:8080,fnserver-2:8080,fnserver-3:8080"
  fn-ui:
    hostname: fn-ui
    depends_on:
      - fnlb
    image: fnproject/ui
    restart: always
    ports:
      - "4000:4000"
    links:
      - fnlb
    environment:
      - "FN_API_URL=http://fnlb:8081"
