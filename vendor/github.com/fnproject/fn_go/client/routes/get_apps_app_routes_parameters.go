// Code generated by go-swagger; DO NOT EDIT.

package routes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAppsAppRoutesParams creates a new GetAppsAppRoutesParams object
// with the default values initialized.
func NewGetAppsAppRoutesParams() *GetAppsAppRoutesParams {
	var ()
	return &GetAppsAppRoutesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAppsAppRoutesParamsWithTimeout creates a new GetAppsAppRoutesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAppsAppRoutesParamsWithTimeout(timeout time.Duration) *GetAppsAppRoutesParams {
	var ()
	return &GetAppsAppRoutesParams{

		timeout: timeout,
	}
}

// NewGetAppsAppRoutesParamsWithContext creates a new GetAppsAppRoutesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAppsAppRoutesParamsWithContext(ctx context.Context) *GetAppsAppRoutesParams {
	var ()
	return &GetAppsAppRoutesParams{

		Context: ctx,
	}
}

// NewGetAppsAppRoutesParamsWithHTTPClient creates a new GetAppsAppRoutesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAppsAppRoutesParamsWithHTTPClient(client *http.Client) *GetAppsAppRoutesParams {
	var ()
	return &GetAppsAppRoutesParams{
		HTTPClient: client,
	}
}

/*GetAppsAppRoutesParams contains all the parameters to send to the API endpoint
for the get apps app routes operation typically these are written to a http.Request
*/
type GetAppsAppRoutesParams struct {

	/*App
	  Name of app for this set of routes.

	*/
	App string
	/*Cursor
	  Cursor from previous response.next_cursor to begin results after, if any.

	*/
	Cursor *string
	/*Image
	  Route image to match, exact.

	*/
	Image *string
	/*PerPage
	  Number of results to return, defaults to 30. Max of 100.

	*/
	PerPage *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get apps app routes params
func (o *GetAppsAppRoutesParams) WithTimeout(timeout time.Duration) *GetAppsAppRoutesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get apps app routes params
func (o *GetAppsAppRoutesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get apps app routes params
func (o *GetAppsAppRoutesParams) WithContext(ctx context.Context) *GetAppsAppRoutesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get apps app routes params
func (o *GetAppsAppRoutesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get apps app routes params
func (o *GetAppsAppRoutesParams) WithHTTPClient(client *http.Client) *GetAppsAppRoutesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get apps app routes params
func (o *GetAppsAppRoutesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApp adds the app to the get apps app routes params
func (o *GetAppsAppRoutesParams) WithApp(app string) *GetAppsAppRoutesParams {
	o.SetApp(app)
	return o
}

// SetApp adds the app to the get apps app routes params
func (o *GetAppsAppRoutesParams) SetApp(app string) {
	o.App = app
}

// WithCursor adds the cursor to the get apps app routes params
func (o *GetAppsAppRoutesParams) WithCursor(cursor *string) *GetAppsAppRoutesParams {
	o.SetCursor(cursor)
	return o
}

// SetCursor adds the cursor to the get apps app routes params
func (o *GetAppsAppRoutesParams) SetCursor(cursor *string) {
	o.Cursor = cursor
}

// WithImage adds the image to the get apps app routes params
func (o *GetAppsAppRoutesParams) WithImage(image *string) *GetAppsAppRoutesParams {
	o.SetImage(image)
	return o
}

// SetImage adds the image to the get apps app routes params
func (o *GetAppsAppRoutesParams) SetImage(image *string) {
	o.Image = image
}

// WithPerPage adds the perPage to the get apps app routes params
func (o *GetAppsAppRoutesParams) WithPerPage(perPage *int64) *GetAppsAppRoutesParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get apps app routes params
func (o *GetAppsAppRoutesParams) SetPerPage(perPage *int64) {
	o.PerPage = perPage
}

// WriteToRequest writes these params to a swagger request
func (o *GetAppsAppRoutesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param app
	if err := r.SetPathParam("app", o.App); err != nil {
		return err
	}

	if o.Cursor != nil {

		// query param cursor
		var qrCursor string
		if o.Cursor != nil {
			qrCursor = *o.Cursor
		}
		qCursor := qrCursor
		if qCursor != "" {
			if err := r.SetQueryParam("cursor", qCursor); err != nil {
				return err
			}
		}

	}

	if o.Image != nil {

		// query param image
		var qrImage string
		if o.Image != nil {
			qrImage = *o.Image
		}
		qImage := qrImage
		if qImage != "" {
			if err := r.SetQueryParam("image", qImage); err != nil {
				return err
			}
		}

	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage int64
		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt64(qrPerPage)
		if qPerPage != "" {
			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
