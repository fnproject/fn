swagger: '2.0'
info:
  title: fn
  description: The open source serverless platform.
  version: "2.0.0"
# the domain of the service
host: "127.0.0.1:8080"
# array of all schemes that your API supports
schemes:
  - https
  - http
# will be prefixed to all paths
basePath: /v2

consumes:
  - application/json
produces:
  - application/json
paths:
  /apps:
    get:
      summary: "Get applications "
      description: "Get a filtered applications returned in alphabetical order."
      tags:
        - Apps
      parameters:
        - name: cursor
          description: Cursor from previous response.next_cursor to begin results after, if any.
          required: false
          type: string
          in: query
        - name: per_page
          description: Number of results to return, defaults to 30. Max of 100.
          required: false
          type: integer
          in: query
        - name: name
          in: query
          description: Application name to filter by
          required: false
          type: string
      responses:
        200:
          description: List of apps.
          schema:
            $ref: '#/definitions/AppList'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: "Post new app"
      description: "Insert a new app"
      tags:
        - Apps
      parameters:
        - name: app_body
          in: body
          description: App to modify.
          required: true
          schema:
            $ref: '#/definitions/App'
      responses:
        200:
          description: App details and stats.
          schema:
            $ref: '#/definitions/App'
        400:
          description: Parameters are missing or invalid.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: App already exists.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /apps/{appID}:
    delete:
      summary: "Delete an app."
      description: "Delete an app."
      tags:
        - Apps
      parameters:
         - $ref: '#/parameters/AppID'
      responses:
        200:
          description: Apps successfully deleted.
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: "Get information for a app."
      description: "This gives more details about a app, such as statistics."
      tags:
        - Apps
      parameters:
        - $ref: '#/parameters/AppID'
      responses:
        200:
          description: App details and stats.
          schema:
            $ref: '#/definitions/App'
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: "Update an app."
      description: "Updates and application."
      tags:
        - Apps
      parameters:
        - $ref: '#/parameters/AppID'
        - name: body
          in: body
          description: App to modify.
          required: true
          schema:
            $ref: '#/definitions/App'
      responses:
        200:
          description: App details and stats.
          schema:
            $ref: '#/definitions/App'
        404:
          description: App does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /fns:
    get:
      operationId: "ListFns"
      summary: "Get all fns"
      description: "Get a list of all the Functions in alphabetical order."
      tags:
        - Fns
      parameters:
        - $ref: '#/parameters/AppIDQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/perPage'
        - name: name
          in: query
          description: Function name to filter by
          required: false
          type: string

      responses:
        200:
          description: List of fns.
          schema:
            $ref: '#/definitions/FnList'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    post:
      operationId: "CreateFn"
      summary: "Create a fn"
      description: "Creates a new Function, returning the complete entity."
      tags:
        - Fns
      parameters:
        - name: body
          in: body
          description: Fn to upsert
          required: true
          schema:
            $ref: '#/definitions/Fn'
      responses:
        200:
          description: Fn.
          schema:
            $ref: '#/definitions/Fn'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'

  /fns/{fnID}:
    get:
      operationId: "GetFn"
      summary: "Get definition for a function"
      description: "Get definition for a function."
      tags:
        - Fns
      parameters:
        - $ref: '#/parameters/FnID'
      responses:
        200:
          description: Function definition
          schema:
            $ref: '#/definitions/Fn'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    put:
      operationId: "UpdateFn"
      summary: "Updates a fn"
      description: "Updates a Function."
      tags:
        - Fns
      parameters:
        - $ref: '#/parameters/FnID'
        - name: body
          in: body
          description: Fn to upsert
          required: true
          schema:
            $ref: '#/definitions/Fn'
      responses:
        200:
          description: Fn metadata
          schema:
            $ref: '#/definitions/Fn'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: "DeleteFn"
      summary: "Delete a fn"
      description: "Delete a function."
      tags:
        - Fns
      parameters:
        - $ref: '#/parameters/FnID'
      responses:
        204:
          description: Fn successfully deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /triggers:
    get:
      operationId: "ListTriggers"
      summary: List triggers associated with app
      description: This will list all Triggers for a particular Application, returned in name alphabetical order.
      tags:
        - Triggers
      parameters:
        - $ref: '#/parameters/AppIDQuery'
        - $ref: '#/parameters/FnIDQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/perPage'
        # Can add type, route, etc qparams as required
      responses:
        200:
          description: Trigger data
          schema:
            $ref: '#/definitions/TriggerList'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    post:
      operationId: "CreateTrigger"
      summary: Create a Trigger.
      description: Creates a Trigger.
      tags:
        - Triggers
      parameters:
        - name: body
          in: body
          description: Trigger to create.
          required: true
          schema:
            $ref: '#/definitions/Trigger'
      responses:
        200:
          description: Created Triggers data
          schema:
            $ref: '#/definitions/Trigger'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'

  /triggers/{triggerID}:
    get:
      operationId: "GetTrigger"
      summary: Gets Trigger by Name
      description: Gets a Trigger by Name.
      tags:
        - Triggers
      parameters:
        - $ref: '#/parameters/TriggerID'
      responses:
        200:
          description: Trigger information
          schema:
            $ref: '#/definitions/Trigger'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    put:
      operationId: "UpdateTrigger"
      summary: Update a Trigger.
      description: Updates a Trigger.
      tags:
        - Triggers
      parameters:
        - $ref: '#/parameters/TriggerID'
        - name: body
          in: body
          description: Trigger to update.
          required: true
          schema:
            $ref: '#/definitions/Trigger'
      responses:
        200:
          description: Created Triggers data
          schema:
            $ref: '#/definitions/Trigger'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'

    delete:
      operationId: "DeleteTrigger"
      summary: Deletes the Trigger
      description: Deletes the Trigger.
      tags:
        - Triggers
      parameters:
        - $ref: '#/parameters/TriggerID'
      responses:
        204:
          description: Trigger successfully deleted.
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'

definitions:
  Route:
    type: object
    properties:
      app_id:
        type: string
        description: App ID
      path:
        type: string
        description: URL path that will be matched to this route
        readOnly: true
      image:
        description: Name of Docker image to use in this route. You should include the image tag, which should be a version number, to be more accurate. Can be overridden on a per route basis with route.image.
        type: string
      headers:
        type: object
        description: Map of http headers that will be sent with the response
        additionalProperties:
          type: array
          items:
            type: string
      memory:
        type: integer
        format: uint64
        description: Max usable memory for this route (MiB).
      cpus:
        type: string
        description: Max usable CPU cores for this route. Value in MilliCPUs (eg. 500m) or as floating-point (eg. 0.5)
      type:
        enum:
          - sync
          - async
        description: Route type
        type: string
      format:
        enum:
          - default
          - http
          - json
        description: Payload format sent into function.
        type: string
      config:
        type: object
        description: Route configuration - overrides application configuration
        additionalProperties:
          type: string
      timeout:
        type: integer
        default: 30
        format: int32
        description: Timeout for executions of this route. Value in Seconds
      idle_timeout:
        type: integer
        default: 30
        format: int32
        description: Hot functions idle timeout before termination. Value in Seconds
      annotations:
        type: object
        description: Route annotations - this is a map of annotations attached to this route, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      created_at:
        type: string
        format: date-time
        description: Time when route was created. Always in UTC.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that route was updated. Always in UTC.
        readOnly: true

  App:
    type: object
    properties:
      id:
        type: string
        description: App ID
        readOnly: true
      name:
        type: string
        description: "Name of this app. Must be different than the image name. Can ony contain alphanumeric, -, and _."
        readOnly: true
      config:
        type: object
        description: Application function configuration, applied to all routes.
        additionalProperties:
          type: string
      annotations:
        type: object
        description: Application annotations - this is a map of annotations attached to this app, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      syslog_url:
        type: string
        description: A comma separated list of syslog urls to send all function logs to. supports tls, udp or tcp. e.g. tls://logs.papertrailapp.com:1
      created_at:
        type: string
        format: date-time
        description: Time when app was created. Always in UTC.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that app was updated. Always in UTC.
        readOnly: true

  Fn:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier
        readOnly: true
      name:
        type: string
        description: unique name for this function.
      app_id:
        type: string
        description: App ID.
      image:
        type: string
        description: "full container image name, e.g. hub.docker.com/fnproject/yo or fnproject/yo (default registry: hub.docker.com)"
      mem:
        type: integer
        format: uint64
        description: Max usable memory given to function (MiB).
      cpu:
        type: string
        description: Max usable CPU cores for this trigger. Value in MilliCPUs (eg. 500m) or as floating-point (eg. 0.5)
      timeout:
        type: integer
        default: 30
        format: int32
        description: Timeout for executions of a function. Value in Seconds
      idle_timeout:
        type: integer
        default: 30
        format: int32
        description: Hot functions idle timeout before container termination. Value in Seconds
      config:
        type: object
        description: Func configuration key values
        additionalProperties:
          type: string
      format:
        enum:
          - default
          - http
          - json
          - cloudevent
        description: Payload format sent into function.
        type: string
      annotations:
        type: object
        description: Func annotations - this is a map of annotations attached to this func, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      created_at:
        type: string
        format: date-time
        description: Time when function was created. Always in UTC RFC3339.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that function was updated. Always in UTC RFC3339.
        readOnly: true

  FnList:
    type: object
    required:
      - items
    properties:
      next_cursor:
        $ref: '#/definitions/nextCursor'
      items:
        type: array
        items:
          $ref: '#/definitions/Fn'

  Trigger:
    type: object
    properties:
      id:
        type: string
        description: Unique trigger identifier
        readOnly: true
      name:
        type: string
        description: unique name for this trigger, used to identify this trigger
      type:
        type: string
        description: class of trigger, e.g. schedule, http
        enum: [http, stream]
      source:
        type: string
        description: uri path for this trigger. e.g. `sayHello`, `say/hello`
      fn_id:
        $ref: '#/definitions/FnID'
      app_id:
        $ref: '#/definitions/AppID'
      annotations:
        type: object
        description: Trigger annotations - this is a map of annotations attached to this trigger, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes
        additionalProperties:
          type: object
      created_at:
        type: string
        format: date-time
        description: Time when trigger was created. Always in UTC.
        readOnly: true
      updated_at:
        type: string
        format: date-time
        description: Most recent time that trigger was updated. Always in UTC.
        readOnly: true

  TriggerList:
    type: object
    required:
      - items
    properties:
      next_cursor:
        $ref: '#/definitions/nextCursor'
      items:
        type: array
        items:
          $ref: '#/definitions/Trigger'

  AppList:
    type: object
    required:
      - items
    properties:
      next:
        $ref: '#/definitions/nextCursor'
      items:
        type: array
        items:
          $ref: '#/definitions/App'


  ErrorBody:
    type: object
    properties:
      message:
        type: string
        readOnly: true
      fields:
        type: string
        readOnly: true

  Error:
    type: object
    properties:
      error:
        $ref: '#/definitions/ErrorBody'

  nextCursor:
    type: string
    description: cursor to send with subsequent request to receive the next page, if non-empty
    readOnly: true

  AppID:
    type: string
    description: opaque, unique application identifier
    readOnly: true

  FnID:
    type: string
    description: opaque, unique function identifier
    readOnly: true

  TriggerID:
    type: string
    description: opaque, unique trigger identifier
    readOnly: true

  FnWrapper:
    type: object
    required:
      - fn
    properties:
      fn:
        $ref: '#/definitions/Fn'
      error:
        $ref: '#/definitions/ErrorBody'
parameters:
  cursor:
    name: cursor
    description: Cursor from previous response.next_cursor to begin results after, if any.
    required: false
    type: string
    in: query
  perPage:
    name: per_page
    description: Number of results to return, defaults to 30. Max of 100.
    required: false
    type: integer
    in: query
  AppName:
    name: app
    in: path
    description: App name.
    required: true
    type: string
  AppID:
    name: appID
    in: path
    description: Opaque Unique application ID
    required: true
    type: string
  FnID:
    name: fnID
    in: path
    description: Function ID.
    required: true
    type: string
  FnIDQuery:
    name: fn_id
    in: query
    description: Function ID.
    required: false
    type: string
  AppIDQuery:
    name: app_id
    in: query
    description: Function ID.
    required: false
    type: string
  TriggerID:
    name: triggerID
    in: path
    description: Trigger ID.
    required: true
    type: string
  TriggerIDQuery:
    name: trigger
    type: string
    in: query
    description: Trigger ID.
    required: true
