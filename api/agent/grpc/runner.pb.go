// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runner.proto

package runner

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request to allocate a slot for a call
type TryCall struct {
	ModelsCallJson       string            `protobuf:"bytes,1,opt,name=models_call_json,json=modelsCallJson,proto3" json:"models_call_json,omitempty"`
	SlotHashId           string            `protobuf:"bytes,2,opt,name=slot_hash_id,json=slotHashId,proto3" json:"slot_hash_id,omitempty"`
	Extensions           map[string]string `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TryCall) Reset()         { *m = TryCall{} }
func (m *TryCall) String() string { return proto.CompactTextString(m) }
func (*TryCall) ProtoMessage()    {}
func (*TryCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{0}
}

func (m *TryCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TryCall.Unmarshal(m, b)
}
func (m *TryCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TryCall.Marshal(b, m, deterministic)
}
func (m *TryCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TryCall.Merge(m, src)
}
func (m *TryCall) XXX_Size() int {
	return xxx_messageInfo_TryCall.Size(m)
}
func (m *TryCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TryCall.DiscardUnknown(m)
}

var xxx_messageInfo_TryCall proto.InternalMessageInfo

func (m *TryCall) GetModelsCallJson() string {
	if m != nil {
		return m.ModelsCallJson
	}
	return ""
}

func (m *TryCall) GetSlotHashId() string {
	if m != nil {
		return m.SlotHashId
	}
	return ""
}

func (m *TryCall) GetExtensions() map[string]string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

// Data sent C2S and S2C - as soon as the runner sees the first of these it
// will start running. If empty content, there must be one of these with eof.
// The runner will send these for the body of the response, AFTER it has sent
// a CallEnding message.
type DataFrame struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Eof                  bool     `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataFrame) Reset()         { *m = DataFrame{} }
func (m *DataFrame) String() string { return proto.CompactTextString(m) }
func (*DataFrame) ProtoMessage()    {}
func (*DataFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{1}
}

func (m *DataFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataFrame.Unmarshal(m, b)
}
func (m *DataFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataFrame.Marshal(b, m, deterministic)
}
func (m *DataFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataFrame.Merge(m, src)
}
func (m *DataFrame) XXX_Size() int {
	return xxx_messageInfo_DataFrame.Size(m)
}
func (m *DataFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_DataFrame.DiscardUnknown(m)
}

var xxx_messageInfo_DataFrame proto.InternalMessageInfo

func (m *DataFrame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DataFrame) GetEof() bool {
	if m != nil {
		return m.Eof
	}
	return false
}

type HttpHeader struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpHeader) Reset()         { *m = HttpHeader{} }
func (m *HttpHeader) String() string { return proto.CompactTextString(m) }
func (*HttpHeader) ProtoMessage()    {}
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{2}
}

func (m *HttpHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpHeader.Unmarshal(m, b)
}
func (m *HttpHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpHeader.Marshal(b, m, deterministic)
}
func (m *HttpHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpHeader.Merge(m, src)
}
func (m *HttpHeader) XXX_Size() int {
	return xxx_messageInfo_HttpHeader.Size(m)
}
func (m *HttpHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpHeader.DiscardUnknown(m)
}

var xxx_messageInfo_HttpHeader proto.InternalMessageInfo

func (m *HttpHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpHeader) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HttpRespMeta struct {
	StatusCode           int32         `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers              []*HttpHeader `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HttpRespMeta) Reset()         { *m = HttpRespMeta{} }
func (m *HttpRespMeta) String() string { return proto.CompactTextString(m) }
func (*HttpRespMeta) ProtoMessage()    {}
func (*HttpRespMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{3}
}

func (m *HttpRespMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRespMeta.Unmarshal(m, b)
}
func (m *HttpRespMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRespMeta.Marshal(b, m, deterministic)
}
func (m *HttpRespMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRespMeta.Merge(m, src)
}
func (m *HttpRespMeta) XXX_Size() int {
	return xxx_messageInfo_HttpRespMeta.Size(m)
}
func (m *HttpRespMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRespMeta.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRespMeta proto.InternalMessageInfo

func (m *HttpRespMeta) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *HttpRespMeta) GetHeaders() []*HttpHeader {
	if m != nil {
		return m.Headers
	}
	return nil
}

// Call has started to finish - data might not be here yet and it will be sent
// as DataFrames.
type CallResultStart struct {
	// Types that are valid to be assigned to Meta:
	//	*CallResultStart_Http
	Meta                 isCallResultStart_Meta `protobuf_oneof:"meta"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CallResultStart) Reset()         { *m = CallResultStart{} }
func (m *CallResultStart) String() string { return proto.CompactTextString(m) }
func (*CallResultStart) ProtoMessage()    {}
func (*CallResultStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{4}
}

func (m *CallResultStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResultStart.Unmarshal(m, b)
}
func (m *CallResultStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResultStart.Marshal(b, m, deterministic)
}
func (m *CallResultStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResultStart.Merge(m, src)
}
func (m *CallResultStart) XXX_Size() int {
	return xxx_messageInfo_CallResultStart.Size(m)
}
func (m *CallResultStart) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResultStart.DiscardUnknown(m)
}

var xxx_messageInfo_CallResultStart proto.InternalMessageInfo

type isCallResultStart_Meta interface {
	isCallResultStart_Meta()
}

type CallResultStart_Http struct {
	Http *HttpRespMeta `protobuf:"bytes,100,opt,name=http,proto3,oneof"`
}

func (*CallResultStart_Http) isCallResultStart_Meta() {}

func (m *CallResultStart) GetMeta() isCallResultStart_Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CallResultStart) GetHttp() *HttpRespMeta {
	if x, ok := m.GetMeta().(*CallResultStart_Http); ok {
		return x.Http
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CallResultStart) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CallResultStart_Http)(nil),
	}
}

// Call has really finished, it might have completed or crashed
type CallFinished struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Details              string   `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	ErrorCode            int32    `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorStr             string   `protobuf:"bytes,4,opt,name=errorStr,proto3" json:"errorStr,omitempty"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StartedAt            string   `protobuf:"bytes,6,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	CompletedAt          string   `protobuf:"bytes,7,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
	SchedulerDuration    int64    `protobuf:"varint,8,opt,name=schedulerDuration,proto3" json:"schedulerDuration,omitempty"`
	ExecutionDuration    int64    `protobuf:"varint,9,opt,name=executionDuration,proto3" json:"executionDuration,omitempty"`
	ErrorUser            bool     `protobuf:"varint,10,opt,name=errorUser,proto3" json:"errorUser,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallFinished) Reset()         { *m = CallFinished{} }
func (m *CallFinished) String() string { return proto.CompactTextString(m) }
func (*CallFinished) ProtoMessage()    {}
func (*CallFinished) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{5}
}

func (m *CallFinished) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallFinished.Unmarshal(m, b)
}
func (m *CallFinished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallFinished.Marshal(b, m, deterministic)
}
func (m *CallFinished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallFinished.Merge(m, src)
}
func (m *CallFinished) XXX_Size() int {
	return xxx_messageInfo_CallFinished.Size(m)
}
func (m *CallFinished) XXX_DiscardUnknown() {
	xxx_messageInfo_CallFinished.DiscardUnknown(m)
}

var xxx_messageInfo_CallFinished proto.InternalMessageInfo

func (m *CallFinished) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CallFinished) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *CallFinished) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *CallFinished) GetErrorStr() string {
	if m != nil {
		return m.ErrorStr
	}
	return ""
}

func (m *CallFinished) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *CallFinished) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *CallFinished) GetCompletedAt() string {
	if m != nil {
		return m.CompletedAt
	}
	return ""
}

func (m *CallFinished) GetSchedulerDuration() int64 {
	if m != nil {
		return m.SchedulerDuration
	}
	return 0
}

func (m *CallFinished) GetExecutionDuration() int64 {
	if m != nil {
		return m.ExecutionDuration
	}
	return 0
}

func (m *CallFinished) GetErrorUser() bool {
	if m != nil {
		return m.ErrorUser
	}
	return false
}

type ClientMsg struct {
	// Types that are valid to be assigned to Body:
	//	*ClientMsg_Try
	//	*ClientMsg_Data
	Body                 isClientMsg_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClientMsg) Reset()         { *m = ClientMsg{} }
func (m *ClientMsg) String() string { return proto.CompactTextString(m) }
func (*ClientMsg) ProtoMessage()    {}
func (*ClientMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{6}
}

func (m *ClientMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMsg.Unmarshal(m, b)
}
func (m *ClientMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMsg.Marshal(b, m, deterministic)
}
func (m *ClientMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMsg.Merge(m, src)
}
func (m *ClientMsg) XXX_Size() int {
	return xxx_messageInfo_ClientMsg.Size(m)
}
func (m *ClientMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMsg proto.InternalMessageInfo

type isClientMsg_Body interface {
	isClientMsg_Body()
}

type ClientMsg_Try struct {
	Try *TryCall `protobuf:"bytes,1,opt,name=try,proto3,oneof"`
}

type ClientMsg_Data struct {
	Data *DataFrame `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ClientMsg_Try) isClientMsg_Body() {}

func (*ClientMsg_Data) isClientMsg_Body() {}

func (m *ClientMsg) GetBody() isClientMsg_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ClientMsg) GetTry() *TryCall {
	if x, ok := m.GetBody().(*ClientMsg_Try); ok {
		return x.Try
	}
	return nil
}

func (m *ClientMsg) GetData() *DataFrame {
	if x, ok := m.GetBody().(*ClientMsg_Data); ok {
		return x.Data
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClientMsg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClientMsg_Try)(nil),
		(*ClientMsg_Data)(nil),
	}
}

type RunnerMsg struct {
	// Types that are valid to be assigned to Body:
	//	*RunnerMsg_ResultStart
	//	*RunnerMsg_Data
	//	*RunnerMsg_Finished
	Body                 isRunnerMsg_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RunnerMsg) Reset()         { *m = RunnerMsg{} }
func (m *RunnerMsg) String() string { return proto.CompactTextString(m) }
func (*RunnerMsg) ProtoMessage()    {}
func (*RunnerMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{7}
}

func (m *RunnerMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerMsg.Unmarshal(m, b)
}
func (m *RunnerMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerMsg.Marshal(b, m, deterministic)
}
func (m *RunnerMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerMsg.Merge(m, src)
}
func (m *RunnerMsg) XXX_Size() int {
	return xxx_messageInfo_RunnerMsg.Size(m)
}
func (m *RunnerMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerMsg.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerMsg proto.InternalMessageInfo

type isRunnerMsg_Body interface {
	isRunnerMsg_Body()
}

type RunnerMsg_ResultStart struct {
	ResultStart *CallResultStart `protobuf:"bytes,1,opt,name=result_start,json=resultStart,proto3,oneof"`
}

type RunnerMsg_Data struct {
	Data *DataFrame `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type RunnerMsg_Finished struct {
	Finished *CallFinished `protobuf:"bytes,3,opt,name=finished,proto3,oneof"`
}

func (*RunnerMsg_ResultStart) isRunnerMsg_Body() {}

func (*RunnerMsg_Data) isRunnerMsg_Body() {}

func (*RunnerMsg_Finished) isRunnerMsg_Body() {}

func (m *RunnerMsg) GetBody() isRunnerMsg_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *RunnerMsg) GetResultStart() *CallResultStart {
	if x, ok := m.GetBody().(*RunnerMsg_ResultStart); ok {
		return x.ResultStart
	}
	return nil
}

func (m *RunnerMsg) GetData() *DataFrame {
	if x, ok := m.GetBody().(*RunnerMsg_Data); ok {
		return x.Data
	}
	return nil
}

func (m *RunnerMsg) GetFinished() *CallFinished {
	if x, ok := m.GetBody().(*RunnerMsg_Finished); ok {
		return x.Finished
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RunnerMsg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RunnerMsg_ResultStart)(nil),
		(*RunnerMsg_Data)(nil),
		(*RunnerMsg_Finished)(nil),
	}
}

type RunnerStatus struct {
	Active               int32    `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Failed               bool     `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Details              string   `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	ErrorCode            int32    `protobuf:"varint,6,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorStr             string   `protobuf:"bytes,7,opt,name=errorStr,proto3" json:"errorStr,omitempty"`
	CreatedAt            string   `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StartedAt            string   `protobuf:"bytes,9,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	CompletedAt          string   `protobuf:"bytes,10,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
	Cached               bool     `protobuf:"varint,11,opt,name=cached,proto3" json:"cached,omitempty"`
	RequestsReceived     uint64   `protobuf:"varint,12,opt,name=requestsReceived,proto3" json:"requestsReceived,omitempty"`
	RequestsHandled      uint64   `protobuf:"varint,13,opt,name=requestsHandled,proto3" json:"requestsHandled,omitempty"`
	KdumpsOnDisk         uint64   `protobuf:"varint,14,opt,name=kdumpsOnDisk,proto3" json:"kdumpsOnDisk,omitempty"`
	SchedulerDuration    int64    `protobuf:"varint,15,opt,name=schedulerDuration,proto3" json:"schedulerDuration,omitempty"`
	ExecutionDuration    int64    `protobuf:"varint,16,opt,name=executionDuration,proto3" json:"executionDuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunnerStatus) Reset()         { *m = RunnerStatus{} }
func (m *RunnerStatus) String() string { return proto.CompactTextString(m) }
func (*RunnerStatus) ProtoMessage()    {}
func (*RunnerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{8}
}

func (m *RunnerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerStatus.Unmarshal(m, b)
}
func (m *RunnerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerStatus.Marshal(b, m, deterministic)
}
func (m *RunnerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerStatus.Merge(m, src)
}
func (m *RunnerStatus) XXX_Size() int {
	return xxx_messageInfo_RunnerStatus.Size(m)
}
func (m *RunnerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerStatus proto.InternalMessageInfo

func (m *RunnerStatus) GetActive() int32 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *RunnerStatus) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *RunnerStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RunnerStatus) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *RunnerStatus) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *RunnerStatus) GetErrorStr() string {
	if m != nil {
		return m.ErrorStr
	}
	return ""
}

func (m *RunnerStatus) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *RunnerStatus) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *RunnerStatus) GetCompletedAt() string {
	if m != nil {
		return m.CompletedAt
	}
	return ""
}

func (m *RunnerStatus) GetCached() bool {
	if m != nil {
		return m.Cached
	}
	return false
}

func (m *RunnerStatus) GetRequestsReceived() uint64 {
	if m != nil {
		return m.RequestsReceived
	}
	return 0
}

func (m *RunnerStatus) GetRequestsHandled() uint64 {
	if m != nil {
		return m.RequestsHandled
	}
	return 0
}

func (m *RunnerStatus) GetKdumpsOnDisk() uint64 {
	if m != nil {
		return m.KdumpsOnDisk
	}
	return 0
}

func (m *RunnerStatus) GetSchedulerDuration() int64 {
	if m != nil {
		return m.SchedulerDuration
	}
	return 0
}

func (m *RunnerStatus) GetExecutionDuration() int64 {
	if m != nil {
		return m.ExecutionDuration
	}
	return 0
}

func init() {
	proto.RegisterType((*TryCall)(nil), "TryCall")
	proto.RegisterMapType((map[string]string)(nil), "TryCall.ExtensionsEntry")
	proto.RegisterType((*DataFrame)(nil), "DataFrame")
	proto.RegisterType((*HttpHeader)(nil), "HttpHeader")
	proto.RegisterType((*HttpRespMeta)(nil), "HttpRespMeta")
	proto.RegisterType((*CallResultStart)(nil), "CallResultStart")
	proto.RegisterType((*CallFinished)(nil), "CallFinished")
	proto.RegisterType((*ClientMsg)(nil), "ClientMsg")
	proto.RegisterType((*RunnerMsg)(nil), "RunnerMsg")
	proto.RegisterType((*RunnerStatus)(nil), "RunnerStatus")
}

func init() { proto.RegisterFile("runner.proto", fileDescriptor_48eceea7e2abc593) }

var fileDescriptor_48eceea7e2abc593 = []byte{
	// 785 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0x6f, 0x6f, 0xeb, 0x34,
	0x14, 0xc6, 0x97, 0xfe, 0x49, 0xd3, 0x93, 0x6c, 0x2b, 0x16, 0xba, 0x8a, 0xca, 0x95, 0x88, 0x02,
	0x48, 0x11, 0xa0, 0x0c, 0x06, 0x48, 0x57, 0x48, 0x20, 0xc1, 0xb6, 0xab, 0x80, 0x74, 0x05, 0xf2,
	0x80, 0xb7, 0x95, 0x17, 0x9f, 0xb6, 0x61, 0x69, 0x5c, 0x6c, 0x67, 0xba, 0xfd, 0x28, 0x7c, 0x29,
	0x5e, 0xf1, 0x39, 0xf8, 0x0c, 0xc8, 0x4e, 0x9a, 0x96, 0x15, 0x3a, 0xee, 0xbb, 0x9c, 0xe7, 0x39,
	0xc7, 0xc7, 0xf6, 0xf9, 0x45, 0x86, 0x40, 0xd6, 0x55, 0x85, 0x32, 0x5d, 0x4b, 0xa1, 0xc5, 0xf4,
	0x9d, 0x85, 0x10, 0x8b, 0x12, 0x2f, 0x6c, 0x74, 0x57, 0xcf, 0x2f, 0x70, 0xb5, 0xd6, 0x9b, 0xc6,
	0x8c, 0xff, 0x70, 0x60, 0xf4, 0x93, 0xdc, 0x5c, 0xb1, 0xb2, 0x24, 0x09, 0x4c, 0x56, 0x82, 0x63,
	0xa9, 0x66, 0x39, 0x2b, 0xcb, 0xd9, 0xaf, 0x4a, 0x54, 0xa1, 0x13, 0x39, 0xc9, 0x98, 0x9e, 0x35,
	0xba, 0xc9, 0xfa, 0x5e, 0x89, 0x8a, 0x44, 0x10, 0xa8, 0x52, 0xe8, 0xd9, 0x92, 0xa9, 0xe5, 0xac,
	0xe0, 0x61, 0xcf, 0x66, 0x81, 0xd1, 0x32, 0xa6, 0x96, 0xdf, 0x71, 0xf2, 0x02, 0x00, 0x5f, 0x6b,
	0xac, 0x54, 0x21, 0x2a, 0x15, 0xf6, 0xa3, 0x7e, 0xe2, 0x5f, 0x86, 0x69, 0xdb, 0x29, 0xbd, 0xe9,
	0xac, 0x9b, 0x4a, 0xcb, 0x0d, 0xdd, 0xcb, 0x9d, 0x7e, 0x05, 0xe7, 0x8f, 0x6c, 0x32, 0x81, 0xfe,
	0x3d, 0x6e, 0xda, 0xbd, 0x98, 0x4f, 0xf2, 0x36, 0x0c, 0x1f, 0x58, 0x59, 0x63, 0xdb, 0xb9, 0x09,
	0xbe, 0xec, 0xbd, 0x70, 0xe2, 0x4f, 0x61, 0x7c, 0xcd, 0x34, 0x7b, 0x29, 0xd9, 0x0a, 0x09, 0x81,
	0x01, 0x67, 0x9a, 0xd9, 0xca, 0x80, 0xda, 0x6f, 0xb3, 0x18, 0x8a, 0xb9, 0x2d, 0xf4, 0xa8, 0xf9,
	0x8c, 0x3f, 0x07, 0xc8, 0xb4, 0x5e, 0x67, 0xc8, 0x38, 0xca, 0xff, 0xdb, 0x2c, 0xfe, 0x05, 0x02,
	0x53, 0x45, 0x51, 0xad, 0x5f, 0xa1, 0x66, 0xe4, 0x5d, 0xf0, 0x95, 0x66, 0xba, 0x56, 0xb3, 0x5c,
	0x70, 0xb4, 0xf5, 0x43, 0x0a, 0x8d, 0x74, 0x25, 0x38, 0x92, 0x0f, 0x60, 0xb4, 0xb4, 0x2d, 0x54,
	0xd8, 0xb3, 0xf7, 0xe1, 0xa7, 0xbb, 0xb6, 0x74, 0xeb, 0xc5, 0x5f, 0xc3, 0xb9, 0xb9, 0x23, 0x8a,
	0xaa, 0x2e, 0xf5, 0xad, 0x66, 0x52, 0x93, 0xf7, 0x60, 0xb0, 0xd4, 0x7a, 0x1d, 0xf2, 0xc8, 0x49,
	0xfc, 0xcb, 0xd3, 0x74, 0xbf, 0x6f, 0x76, 0x42, 0xad, 0xf9, 0xad, 0x0b, 0x83, 0x15, 0x6a, 0x16,
	0xff, 0xd9, 0x83, 0xc0, 0x2c, 0xf0, 0xb2, 0xa8, 0x0a, 0xb5, 0x44, 0x4e, 0x42, 0x18, 0xa9, 0x3a,
	0xcf, 0x51, 0x29, 0xbb, 0x29, 0x8f, 0x6e, 0x43, 0xe3, 0x70, 0xd4, 0xac, 0x28, 0x55, 0x7b, 0xb4,
	0x6d, 0x48, 0x9e, 0xc3, 0x18, 0xa5, 0x14, 0xd2, 0x6c, 0x3c, 0xec, 0xdb, 0xa3, 0xec, 0x04, 0x32,
	0x05, 0xcf, 0x06, 0xb7, 0x5a, 0x86, 0x03, 0x5b, 0xd8, 0xc5, 0xa6, 0x32, 0x97, 0xc8, 0x34, 0xf2,
	0x6f, 0x74, 0x38, 0xb4, 0xe6, 0x4e, 0x30, 0xae, 0x32, 0x47, 0xb2, 0xae, 0xdb, 0xb8, 0x9d, 0x40,
	0x22, 0xf0, 0x73, 0xb1, 0x5a, 0x97, 0xd8, 0xf8, 0x23, 0xeb, 0xef, 0x4b, 0xe4, 0x63, 0x78, 0x4b,
	0xe5, 0x4b, 0xe4, 0x75, 0x89, 0xf2, 0xba, 0x96, 0x4c, 0x17, 0xa2, 0x0a, 0xbd, 0xc8, 0x49, 0xfa,
	0xf4, 0xd0, 0x30, 0xd9, 0xf8, 0x1a, 0xf3, 0xda, 0x04, 0x5d, 0xf6, 0xb8, 0xc9, 0x3e, 0x30, 0xba,
	0x33, 0xff, 0xac, 0x50, 0x86, 0x60, 0x6f, 0x6a, 0x27, 0xc4, 0xb7, 0x30, 0xbe, 0x2a, 0x0b, 0xac,
	0xf4, 0x2b, 0xb5, 0x20, 0xcf, 0xa1, 0xaf, 0x65, 0xc3, 0x88, 0x7f, 0xe9, 0x6d, 0xb1, 0xce, 0x4e,
	0xa8, 0x91, 0x49, 0xd4, 0x52, 0xd7, 0xb3, 0x36, 0xa4, 0x1d, 0x8f, 0x66, 0x56, 0xc6, 0x31, 0xb3,
	0xba, 0x13, 0x7c, 0x13, 0xff, 0xee, 0xc0, 0x98, 0xda, 0x7f, 0xd5, 0xac, 0xfa, 0x05, 0x04, 0xd2,
	0x4e, 0x7d, 0x66, 0xaf, 0xa4, 0x5d, 0x7e, 0x92, 0x3e, 0xc2, 0x21, 0x3b, 0xa1, 0xbe, 0xdc, 0xa3,
	0xe3, 0xc9, 0x76, 0xe4, 0x23, 0xf0, 0xe6, 0x2d, 0x0d, 0x76, 0x98, 0x86, 0xa1, 0x7d, 0x44, 0xb2,
	0x13, 0xda, 0x25, 0x74, 0x7b, 0xfb, 0xab, 0x0f, 0x41, 0xb3, 0xb7, 0x5b, 0xcb, 0x30, 0x79, 0x06,
	0x2e, 0xcb, 0x75, 0xf1, 0xd0, 0xfc, 0x07, 0x43, 0xda, 0x46, 0x46, 0x9f, 0xb3, 0xa2, 0x6c, 0xd7,
	0xf6, 0x68, 0x1b, 0x91, 0x33, 0xe8, 0x15, 0xbc, 0xe5, 0xa3, 0x57, 0xf0, 0x7d, 0xda, 0x86, 0x47,
	0x68, 0x73, 0x8f, 0xd1, 0x36, 0x3a, 0x46, 0x9b, 0x77, 0x94, 0xb6, 0xf1, 0x13, 0xb4, 0xc1, 0x21,
	0x6d, 0xcf, 0xc0, 0xcd, 0x99, 0xa1, 0x2a, 0xf4, 0x9b, 0x93, 0x35, 0x11, 0xf9, 0x10, 0x26, 0x12,
	0x7f, 0xab, 0x51, 0x69, 0x45, 0x31, 0xc7, 0xe2, 0x01, 0x79, 0x18, 0x44, 0x4e, 0x32, 0xa0, 0x07,
	0x3a, 0x49, 0xe0, 0x7c, 0xab, 0x65, 0xac, 0xe2, 0xe6, 0x9a, 0x4e, 0x6d, 0xea, 0x63, 0x99, 0xc4,
	0x10, 0xdc, 0xf3, 0x7a, 0xb5, 0x56, 0x3f, 0x54, 0xd7, 0x85, 0xba, 0x0f, 0xcf, 0x6c, 0xda, 0x3f,
	0xb4, 0x7f, 0xe7, 0xff, 0xfc, 0x8d, 0xf8, 0x9f, 0xfc, 0x07, 0xff, 0x97, 0x0b, 0x38, 0x6b, 0xe6,
	0xfd, 0xa3, 0x79, 0x19, 0x72, 0x51, 0x92, 0xf7, 0xc1, 0xbd, 0xa9, 0x16, 0x6c, 0x81, 0x04, 0xd2,
	0x0e, 0xfe, 0x29, 0xa4, 0x1d, 0xb2, 0x89, 0xf3, 0x89, 0x43, 0x2e, 0xc0, 0xdd, 0x12, 0x92, 0x36,
	0x4f, 0x4d, 0xba, 0x7d, 0x6a, 0xd2, 0x1b, 0xf3, 0xd4, 0x4c, 0x4f, 0xd3, 0x7d, 0x90, 0xee, 0x5c,
	0x6b, 0x7f, 0xf6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x95, 0x13, 0x3a, 0x02, 0xa7, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RunnerProtocolClient is the client API for RunnerProtocol service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RunnerProtocolClient interface {
	Engage(ctx context.Context, opts ...grpc.CallOption) (RunnerProtocol_EngageClient, error)
	// Rather than rely on Prometheus for this, expose status that's specific to the runner lifecycle through this.
	Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RunnerStatus, error)
}

type runnerProtocolClient struct {
	cc *grpc.ClientConn
}

func NewRunnerProtocolClient(cc *grpc.ClientConn) RunnerProtocolClient {
	return &runnerProtocolClient{cc}
}

func (c *runnerProtocolClient) Engage(ctx context.Context, opts ...grpc.CallOption) (RunnerProtocol_EngageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RunnerProtocol_serviceDesc.Streams[0], "/RunnerProtocol/Engage", opts...)
	if err != nil {
		return nil, err
	}
	x := &runnerProtocolEngageClient{stream}
	return x, nil
}

type RunnerProtocol_EngageClient interface {
	Send(*ClientMsg) error
	Recv() (*RunnerMsg, error)
	grpc.ClientStream
}

type runnerProtocolEngageClient struct {
	grpc.ClientStream
}

func (x *runnerProtocolEngageClient) Send(m *ClientMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runnerProtocolEngageClient) Recv() (*RunnerMsg, error) {
	m := new(RunnerMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *runnerProtocolClient) Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RunnerStatus, error) {
	out := new(RunnerStatus)
	err := c.cc.Invoke(ctx, "/RunnerProtocol/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RunnerProtocolServer is the server API for RunnerProtocol service.
type RunnerProtocolServer interface {
	Engage(RunnerProtocol_EngageServer) error
	// Rather than rely on Prometheus for this, expose status that's specific to the runner lifecycle through this.
	Status(context.Context, *empty.Empty) (*RunnerStatus, error)
}

func RegisterRunnerProtocolServer(s *grpc.Server, srv RunnerProtocolServer) {
	s.RegisterService(&_RunnerProtocol_serviceDesc, srv)
}

func _RunnerProtocol_Engage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RunnerProtocolServer).Engage(&runnerProtocolEngageServer{stream})
}

type RunnerProtocol_EngageServer interface {
	Send(*RunnerMsg) error
	Recv() (*ClientMsg, error)
	grpc.ServerStream
}

type runnerProtocolEngageServer struct {
	grpc.ServerStream
}

func (x *runnerProtocolEngageServer) Send(m *RunnerMsg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runnerProtocolEngageServer) Recv() (*ClientMsg, error) {
	m := new(ClientMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RunnerProtocol_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RunnerProtocolServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RunnerProtocol/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RunnerProtocolServer).Status(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RunnerProtocol_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RunnerProtocol",
	HandlerType: (*RunnerProtocolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _RunnerProtocol_Status_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Engage",
			Handler:       _RunnerProtocol_Engage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "runner.proto",
}
